pipeline {
  agent any

  environment {
    DOCKERHUB_CREDENTIALS = credentials('docker_hub')
  }

  stages {
    stage('Pull and build') {
      steps {
        git branch: 'main', url: 'https://github.com/sarbanjeet/OnlineFoodOrderApplication.git'
      }

      steps {
        withMaven(
          maven: 'Maven_Home'
        ) {
          // To run Maven on a Windows agent, use
          bat "mvn package -Dmaven.test.skip"
        }
      }
    }

    stage('Run tests') {
      steps {
        withMaven(
          maven: 'Maven_Home'
        ) {
          junit '**/target/surefire-reports/TEST-*.xml'
          archiveArtifacts 'target/*.jar'
        }
      }
    }

    stage('SonarQube Analysis') {
      steps {
        withMaven(
          maven: 'Maven_Home'
        ) {
          bat "mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=OnlineFoodOrderApplication"
        }
      }
    }

    stage('Build docker image and tag') {
      agent any
      steps {
        bat 'docker build -t online-food-order-application:latest .'
      }

      steps {
        bat 'docker tag online-food-order-application:latest sarbanjeet/online-food-order-application:latest'
      }

      steps {
        bat 'echo | set /p="Sarbu@888" | docker login --username sarbanjeet --password-stdin'
      }
    }
    stage('Push docker image') {
      agent any
      steps {
        bat 'docker push sarbanjeet/online-food-order-application:latest'
      }
    }
    stage('Deploy Web') {
      steps {
        bat 'ansible-playbook playbook.yml'
      }
    }
  }
}